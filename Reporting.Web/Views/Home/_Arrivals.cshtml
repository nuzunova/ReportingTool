@using Reporting.Data;
@using Reporting.Web.Utilities;
@using PagedList.Mvc;

@model PagedList.IPagedList<Arrival>

@{
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "when_desc";
    }
}

<div class="wrapper">
    <div class="table-responsive">
        <table class="table table-striped table-condensed table-hover">
            <tr>
                <th>
                    @Ajax.ActionLink("EmployeeId", "LoadArrivals", new
                       {
                           sortOrder = (string)ViewBag.EmployeeIdSortParam,
                           pageSize = ViewBag.PageSize
                       },
                        new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            UpdateTargetId = "divArrivals",
                        })
                    @Html.SortIdentifier(currentSort, "employeeId")
                </th>
                <th>
                    @Ajax.ActionLink("When", "LoadArrivals", new
                        {
                            sortOrder = (string)ViewBag.WhenSortParam,
                            pageSize = ViewBag.PageSize
                       },
                      
                         new AjaxOptions
                         {
                             InsertionMode = InsertionMode.Replace,
                             HttpMethod = "GET",
                             UpdateTargetId = "divArrivals",
                         })
                    @Html.SortIdentifier(currentSort, "when")
                </th>
            </tr>
            <tbody>
                @foreach (var arrival in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => arrival.EmployeeId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => arrival.When)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @if (Model.PageCount > 1)
    {
        <div class="pager">
            @Html.PagedListPager(Model, page => Url.Action("LoadArrivals", new
       {
           page,
           sortOrder = ViewBag.CurrentSort
       }),
       PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
           new AjaxOptions()
           {
               HttpMethod = "GET",
               UpdateTargetId = "divArrivals",
           }))
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    }
</div>

